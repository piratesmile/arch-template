// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"arch-template/configs"
	"arch-template/internal/app"
	"arch-template/internal/app/middleware"
	"arch-template/internal/app/public"
	"arch-template/internal/app/user"
	"github.com/google/wire"
)

import (
	_ "arch-template/ent/runtime"
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func newServer(c *configs.Config) *app.Server {
	sugaredLogger := newLogger(c)
	client := newDB(c)
	tokenManager := newTokenManager(c)
	entRepository := public.NewBaseStore(client)
	repository := user.NewRepository(entRepository)
	userFetcher := newUserFetcher(repository)
	provider := middleware.New(c, tokenManager, userFetcher, sugaredLogger)
	service := user.NewService(repository, tokenManager)
	handler := user.NewHandler(service)
	httpHandler := app.NewRouter(provider, handler)
	server := app.NewServer(c, sugaredLogger, client, httpHandler)
	return server
}

// wire.go:

var baseSet = wire.NewSet(public.NewBaseStore)

var moduleSet = wire.NewSet(user.NewHandler, user.NewService, user.NewRepository)
